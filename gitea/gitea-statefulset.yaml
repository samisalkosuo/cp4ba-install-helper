kind: ServiceAccount
apiVersion: v1
metadata:
  name: {PREFIX}gitea-config-service-account
  namespace: {NAMESPACE}
  annotations:
    argocd.argoproj.io/sync-wave: "-9"
---
#adds cluster-admin rolebinding
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {PREFIX}gitea-update-config-crb
  namespace: {NAMESPACE}
  annotations:
    argocd.argoproj.io/sync-wave: "-8"
subjects:
  - kind: ServiceAccount
    name: {PREFIX}gitea-config-service-account
    namespace: {NAMESPACE}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
---
#commands to execute
kind: ConfigMap
apiVersion: v1
metadata:
  name: {PREFIX}gitea-config-configmap
  namespace: {NAMESPACE}
  annotations:
    argocd.argoproj.io/sync-wave: "-8"
data:
  configure.sh: |
    oc adm policy add-scc-to-user privileged -z default -n {NAMESPACE}
#oc adm policy add-scc-to-user anyuid -z default -n {NAMESPACE}
---
kind: Job
apiVersion: batch/v1
metadata:
  name: {PREFIX}gitea-config-job
  namespace: {NAMESPACE}
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "-2"
spec:
  #ttlSeconds does not work correctly with ArgoCD, shows job as out of sync
  #ttlSecondsAfterFinished: 1800
  template:
    backoffLimit: 3
    spec:    
      containers:
        - name: configure
          image: "registry.redhat.io/openshift4/ose-cli:latest"
          resources:
            limits:
              cpu: 500m
              memory: 128M
            requests:
              cpu: 500m
              memory: 128M
          command:
            - "/bin/bash"
            - "/etc/config/configure.sh"
          volumeMounts:
            - mountPath: "/etc/config"
              name: "script-volume"
      volumes:
        - name: "script-volume"
          configMap:
            name: "{PREFIX}gitea-config-configmap"
      restartPolicy: "Never"
      terminationGracePeriodSeconds: 30
      activeDeadlineSeconds: 500
      dnsPolicy: "ClusterFirst"
      serviceAccountName: "{PREFIX}gitea-config-service-account"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {PREFIX}gitea-environment-variables
  namespace: {NAMESPACE}
data:
  USER_UID: "1000"
  USER_GID: "1000"
  GITEA__database__DB_TYPE: sqlite3
---
kind: Secret
apiVersion: v1
type: Opaque
metadata:
  name: {PREFIX}gitea-secret
  namespace: {NAMESPACE}
  labels:
    app: {PREFIX}gitea
stringData:
  password: passw0rd
---
apiVersion: v1
kind: Service
metadata:
  name: {PREFIX}gitea 
  namespace: {NAMESPACE}
  labels:
    app: {PREFIX}gitea
spec:
  selector:
    app: {PREFIX}gitea
  ports:
    - port: 3000
      name: gitea-web
    - port: 22
      name: gitea-ssh
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: {PREFIX}gitea
  namespace: {NAMESPACE}
  labels:
    app: {PREFIX}gitea
spec:
  to:
    kind: Service
    name: {PREFIX}gitea
    weight: 100
  port:
    targetPort: gitea-web
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {PREFIX}gitea-data
  namespace: {NAMESPACE}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {PREFIX}gitea
  namespace: {NAMESPACE}
spec:
  serviceName: {PREFIX}gitea
  replicas: 1
  selector:
    matchLabels:
      app: {PREFIX}gitea
  template:
    metadata:
      labels:
        app: {PREFIX}gitea
    spec:
      initContainers:      
      - name: {PREFIX}chmod-gitea-dirs
        image: busybox:latest
        resources:
          limits:
            cpu: 500m
            memory: 128M
          requests:
            cpu: 500m
            memory: 128M
        #create directories and change owner of db directories
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              /bin/chown -R 1000 /data
        volumeMounts:
        - name: {PREFIX}gitea-data
          mountPath: /data
      containers:
        - name: {PREFIX}gitea
          securityContext:
            privileged: true
            #user 1000 is defined in gitea container
            fsGroup: 1000
            runAsUser: 1000
            runAsGroup: 1000            
          image: docker.io/gitea/gitea:1.21.11
          resources:
            limits:
              cpu: 1000m
              memory: 4096M
            requests:
              cpu: 500m
              memory: 2048M
          envFrom:
            - configMapRef:
                name: {PREFIX}gitea-environment-variables
          ports:
            - containerPort: 3000
              name: gitea-web
            - containerPort: 22
              name: gitea-ssh
          volumeMounts:
            - name: {PREFIX}gitea-data
              mountPath: /data
      volumes:
      - name: {PREFIX}gitea-data
---
#initialize gitea
kind: ConfigMap
apiVersion: v1
metadata:
  name: {PREFIX}gitea-initialize-configmap
  namespace: {NAMESPACE}
  annotations:
    argocd.argoproj.io/sync-wave: "-8"
data:
  init-gitea.sh: |
    #!/bin/bash

    #wait until gitea pod is running
    while ! oc get -n {NAMESPACE} pods | grep -q "prereq-cp4ba-gitea-0.*Running"; do
      sleep 5
    done
    USER_NAME=dwells
    USER_PASSWORD={LDAP_BIND_PASSWORD}
    PROTOCOL=https
    ROUTE_NAME=$(oc get routes -n {NAMESPACE} --no-headers |grep "{PREFIX}gitea" |awk '{print $1}')
    HOST_NAME=$(oc get route -n {NAMESPACE} $ROUTE_NAME -o jsonpath='{.spec.host}')
    FORM_DATA="db_type=sqlite3&db_host=localhost%3A3306&db_user=root&db_passwd=&db_name=gitea&ssl_mode=disable&db_schema=&db_path=%2Fdata%2Fgitea%2Fgitea.db&app_name=Gitea%3A+Git+with+a+cup+of+tea&repo_root_path=%2Fdata%2Fgit%2Frepositories&lfs_root_path=%2Fdata%2Fgit%2Flfs&run_user=git&domain={HOST_NAME}&ssh_port=22&http_port=3000&app_url={PROTOCOL}%3A%2F%2F{HOST_NAME}%2F&log_root_path=%2Fdata%2Fgitea%2Flog&smtp_addr=&smtp_port=&smtp_from=&smtp_user=&smtp_passwd=&enable_federated_avatar=on&enable_open_id_sign_in=on&enable_open_id_sign_up=on&default_allow_create_organization=on&default_enable_timetracking=on&no_reply_address=noreply.localhost&password_algorithm=pbkdf2&admin_name={USER_NAME}&admin_email={USER_NAME}%40example.com&admin_passwd={USER_PASSWORD}&admin_confirm_passwd={USER_PASSWORD}"
    #replace strings in data
    FORM_DATA=$(echo "$FORM_DATA" | sed "s/{USER_NAME}/$USER_NAME/g")
    FORM_DATA=$(echo "$FORM_DATA" | sed "s/{USER_PASSWORD}/$USER_PASSWORD/g")
    FORM_DATA=$(echo "$FORM_DATA" | sed "s/{PROTOCOL}/$PROTOCOL/g")
    FORM_DATA=$(echo "$FORM_DATA" | sed "s/{HOST_NAME}/$HOST_NAME/g")

    #call initialization URL
    echo "Initialize Gitea"
    curl -s -o /dev/null -D - -X POST -H "Content-Type: application/x-www-form-urlencoded" -d "${FORM_DATA}" $PROTOCOL://$HOST_NAME/
    sleep 10
    
    #create temporary token
    echo "Create temporary token"
    TOKEN_JSON=$(curl -H "Content-Type: application/json" -d '{"name":"cp4batoken","scopes":["write:user","write:organization","write:repository"]}' -u $USER_NAME:$USER_PASSWORD $PROTOCOL://$HOST_NAME/api/v1/users/$USER_NAME/tokens)
    TOKEN=$(echo $TOKEN_JSON | grep -o '"sha1":"[^"]*' | sed 's/"sha1":"//')
    echo "TOKEN=$TOKEN"

    #create organization for CP4BA
    echo "Create organization for CP4BA"
    curl -s -o /dev/null -D - -X POST -H "Authorization: token $TOKEN" -H "Content-Type: application/json" "$PROTOCOL://$HOST_NAME/api/v1/orgs" -d '{"username":"cp4ba","full_name":"CP4BA Organization","description":"Organization for CP4BA capabilities."}'

    #create repository for ADS
    echo "Create repository for ADS"
    curl -s -o /dev/null -D -  -X POST -H "Authorization: token $TOKEN" -H "Content-Type: application/json" "$PROTOCOL://$HOST_NAME/api/v1/orgs/cp4ba/repos" -d '{"name":"ads","description":"Repository for ADS","private":false,"auto_init":true}'
    
    #write configmap
    cat > gitea-info-configmap.yaml << EOF
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: {PREFIX}gitea-info
    data:
      gitea-info.txt: |
        Gitea URL:
        $PROTOCOL://$HOST_NAME
        
        Gitea REST API:
        $PROTOCOL://$HOST_NAME/api/v1

        Gitea username/password/token:
        $USER_NAME
        $USER_PASSWORD
        $TOKEN
        
        CP4BA organization:
        $PROTOCOL://$HOST_NAME/cp4ba

        ADS repository:
        $PROTOCOL://$HOST_NAME/cp4ba/ads
    EOF
    oc apply -n {NAMESPACE} -f gitea-info-configmap.yaml
---
kind: Job
apiVersion: batch/v1
metadata:
  name: {PREFIX}gitea-initialize-job
  namespace: {NAMESPACE}
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "-2"
spec:
  #ttlSeconds does not work correctly with ArgoCD, shows job as out of sync
  #ttlSecondsAfterFinished: 1800
  template:
    backoffLimit: 3
    spec:    
      containers:
        - name: configure
          image: "registry.redhat.io/openshift4/ose-cli:latest"
          resources:
            limits:
              cpu: 500m
              memory: 512M
            requests:
              cpu: 500m
              memory: 512M
          command:
            - "/bin/bash"
            - "/etc/config/init-gitea.sh"
          volumeMounts:
            - mountPath: "/etc/config"
              name: "script-volume"
      volumes:
        - name: "script-volume"
          configMap:
            name: "{PREFIX}gitea-initialize-configmap"
      restartPolicy: "Never"
      terminationGracePeriodSeconds: 30
      activeDeadlineSeconds: 500
      dnsPolicy: "ClusterFirst"
      serviceAccountName: "{PREFIX}gitea-config-service-account"

